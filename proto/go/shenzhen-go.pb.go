// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shenzhen-go.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ActionRequest_Action int32

const (
	ActionRequest_SAVE     ActionRequest_Action = 0
	ActionRequest_REVERT   ActionRequest_Action = 1
	ActionRequest_GENERATE ActionRequest_Action = 2
	ActionRequest_BUILD    ActionRequest_Action = 3
	ActionRequest_INSTALL  ActionRequest_Action = 4
)

var ActionRequest_Action_name = map[int32]string{
	0: "SAVE",
	1: "REVERT",
	2: "GENERATE",
	3: "BUILD",
	4: "INSTALL",
}
var ActionRequest_Action_value = map[string]int32{
	"SAVE":     0,
	"REVERT":   1,
	"GENERATE": 2,
	"BUILD":    3,
	"INSTALL":  4,
}

func (x ActionRequest_Action) String() string {
	return proto.EnumName(ActionRequest_Action_name, int32(x))
}
func (ActionRequest_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{4, 0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type NodePin struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Pin                  string   `protobuf:"bytes,2,opt,name=pin,proto3" json:"pin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodePin) Reset()         { *m = NodePin{} }
func (m *NodePin) String() string { return proto.CompactTextString(m) }
func (*NodePin) ProtoMessage()    {}
func (*NodePin) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{1}
}
func (m *NodePin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodePin.Unmarshal(m, b)
}
func (m *NodePin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodePin.Marshal(b, m, deterministic)
}
func (dst *NodePin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodePin.Merge(dst, src)
}
func (m *NodePin) XXX_Size() int {
	return xxx_messageInfo_NodePin.Size(m)
}
func (m *NodePin) XXX_DiscardUnknown() {
	xxx_messageInfo_NodePin.DiscardUnknown(m)
}

var xxx_messageInfo_NodePin proto.InternalMessageInfo

func (m *NodePin) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *NodePin) GetPin() string {
	if m != nil {
		return m.Pin
	}
	return ""
}

type ChannelConfig struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cap                  uint64     `protobuf:"varint,2,opt,name=cap,proto3" json:"cap,omitempty"`
	Pins                 []*NodePin `protobuf:"bytes,3,rep,name=pins,proto3" json:"pins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ChannelConfig) Reset()         { *m = ChannelConfig{} }
func (m *ChannelConfig) String() string { return proto.CompactTextString(m) }
func (*ChannelConfig) ProtoMessage()    {}
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{2}
}
func (m *ChannelConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelConfig.Unmarshal(m, b)
}
func (m *ChannelConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelConfig.Marshal(b, m, deterministic)
}
func (dst *ChannelConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelConfig.Merge(dst, src)
}
func (m *ChannelConfig) XXX_Size() int {
	return xxx_messageInfo_ChannelConfig.Size(m)
}
func (m *ChannelConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelConfig proto.InternalMessageInfo

func (m *ChannelConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChannelConfig) GetCap() uint64 {
	if m != nil {
		return m.Cap
	}
	return 0
}

func (m *ChannelConfig) GetPins() []*NodePin {
	if m != nil {
		return m.Pins
	}
	return nil
}

type NodeConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Comment              string   `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	Enabled              bool     `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Multiplicity         string   `protobuf:"bytes,4,opt,name=multiplicity,proto3" json:"multiplicity,omitempty"`
	Wait                 bool     `protobuf:"varint,5,opt,name=wait,proto3" json:"wait,omitempty"`
	PartCfg              []byte   `protobuf:"bytes,6,opt,name=part_cfg,json=partCfg,proto3" json:"part_cfg,omitempty"`
	PartType             string   `protobuf:"bytes,7,opt,name=part_type,json=partType,proto3" json:"part_type,omitempty"`
	X                    float64  `protobuf:"fixed64,8,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,9,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeConfig) Reset()         { *m = NodeConfig{} }
func (m *NodeConfig) String() string { return proto.CompactTextString(m) }
func (*NodeConfig) ProtoMessage()    {}
func (*NodeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{3}
}
func (m *NodeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeConfig.Unmarshal(m, b)
}
func (m *NodeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeConfig.Marshal(b, m, deterministic)
}
func (dst *NodeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeConfig.Merge(dst, src)
}
func (m *NodeConfig) XXX_Size() int {
	return xxx_messageInfo_NodeConfig.Size(m)
}
func (m *NodeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NodeConfig proto.InternalMessageInfo

func (m *NodeConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeConfig) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *NodeConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *NodeConfig) GetMultiplicity() string {
	if m != nil {
		return m.Multiplicity
	}
	return ""
}

func (m *NodeConfig) GetWait() bool {
	if m != nil {
		return m.Wait
	}
	return false
}

func (m *NodeConfig) GetPartCfg() []byte {
	if m != nil {
		return m.PartCfg
	}
	return nil
}

func (m *NodeConfig) GetPartType() string {
	if m != nil {
		return m.PartType
	}
	return ""
}

func (m *NodeConfig) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *NodeConfig) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type ActionRequest struct {
	Graph                string               `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Action               ActionRequest_Action `protobuf:"varint,2,opt,name=action,proto3,enum=proto.ActionRequest_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ActionRequest) Reset()         { *m = ActionRequest{} }
func (m *ActionRequest) String() string { return proto.CompactTextString(m) }
func (*ActionRequest) ProtoMessage()    {}
func (*ActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{4}
}
func (m *ActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionRequest.Unmarshal(m, b)
}
func (m *ActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionRequest.Marshal(b, m, deterministic)
}
func (dst *ActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionRequest.Merge(dst, src)
}
func (m *ActionRequest) XXX_Size() int {
	return xxx_messageInfo_ActionRequest.Size(m)
}
func (m *ActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActionRequest proto.InternalMessageInfo

func (m *ActionRequest) GetGraph() string {
	if m != nil {
		return m.Graph
	}
	return ""
}

func (m *ActionRequest) GetAction() ActionRequest_Action {
	if m != nil {
		return m.Action
	}
	return ActionRequest_SAVE
}

type ActionResponse struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionResponse) Reset()         { *m = ActionResponse{} }
func (m *ActionResponse) String() string { return proto.CompactTextString(m) }
func (*ActionResponse) ProtoMessage()    {}
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{5}
}
func (m *ActionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionResponse.Unmarshal(m, b)
}
func (m *ActionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionResponse.Marshal(b, m, deterministic)
}
func (dst *ActionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionResponse.Merge(dst, src)
}
func (m *ActionResponse) XXX_Size() int {
	return xxx_messageInfo_ActionResponse.Size(m)
}
func (m *ActionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActionResponse proto.InternalMessageInfo

func (m *ActionResponse) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

type Input struct {
	Graph                string   `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	In                   string   `protobuf:"bytes,2,opt,name=in,proto3" json:"in,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{6}
}
func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (dst *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(dst, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

func (m *Input) GetGraph() string {
	if m != nil {
		return m.Graph
	}
	return ""
}

func (m *Input) GetIn() string {
	if m != nil {
		return m.In
	}
	return ""
}

type Output struct {
	Out                  string   `protobuf:"bytes,1,opt,name=out,proto3" json:"out,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{7}
}
func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (dst *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(dst, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

func (m *Output) GetOut() string {
	if m != nil {
		return m.Out
	}
	return ""
}

func (m *Output) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type SetChannelRequest struct {
	Graph                string         `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Channel              string         `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Config               *ChannelConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SetChannelRequest) Reset()         { *m = SetChannelRequest{} }
func (m *SetChannelRequest) String() string { return proto.CompactTextString(m) }
func (*SetChannelRequest) ProtoMessage()    {}
func (*SetChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{8}
}
func (m *SetChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetChannelRequest.Unmarshal(m, b)
}
func (m *SetChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetChannelRequest.Marshal(b, m, deterministic)
}
func (dst *SetChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetChannelRequest.Merge(dst, src)
}
func (m *SetChannelRequest) XXX_Size() int {
	return xxx_messageInfo_SetChannelRequest.Size(m)
}
func (m *SetChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetChannelRequest proto.InternalMessageInfo

func (m *SetChannelRequest) GetGraph() string {
	if m != nil {
		return m.Graph
	}
	return ""
}

func (m *SetChannelRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *SetChannelRequest) GetConfig() *ChannelConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetGraphPropertiesRequest struct {
	Graph                string   `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PackagePath          string   `protobuf:"bytes,3,opt,name=package_path,json=packagePath,proto3" json:"package_path,omitempty"`
	IsCommand            bool     `protobuf:"varint,4,opt,name=is_command,json=isCommand,proto3" json:"is_command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGraphPropertiesRequest) Reset()         { *m = SetGraphPropertiesRequest{} }
func (m *SetGraphPropertiesRequest) String() string { return proto.CompactTextString(m) }
func (*SetGraphPropertiesRequest) ProtoMessage()    {}
func (*SetGraphPropertiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{9}
}
func (m *SetGraphPropertiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGraphPropertiesRequest.Unmarshal(m, b)
}
func (m *SetGraphPropertiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGraphPropertiesRequest.Marshal(b, m, deterministic)
}
func (dst *SetGraphPropertiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGraphPropertiesRequest.Merge(dst, src)
}
func (m *SetGraphPropertiesRequest) XXX_Size() int {
	return xxx_messageInfo_SetGraphPropertiesRequest.Size(m)
}
func (m *SetGraphPropertiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGraphPropertiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetGraphPropertiesRequest proto.InternalMessageInfo

func (m *SetGraphPropertiesRequest) GetGraph() string {
	if m != nil {
		return m.Graph
	}
	return ""
}

func (m *SetGraphPropertiesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetGraphPropertiesRequest) GetPackagePath() string {
	if m != nil {
		return m.PackagePath
	}
	return ""
}

func (m *SetGraphPropertiesRequest) GetIsCommand() bool {
	if m != nil {
		return m.IsCommand
	}
	return false
}

type SetNodeRequest struct {
	Graph                string      `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Node                 string      `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Config               *NodeConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SetNodeRequest) Reset()         { *m = SetNodeRequest{} }
func (m *SetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*SetNodeRequest) ProtoMessage()    {}
func (*SetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{10}
}
func (m *SetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNodeRequest.Unmarshal(m, b)
}
func (m *SetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNodeRequest.Marshal(b, m, deterministic)
}
func (dst *SetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNodeRequest.Merge(dst, src)
}
func (m *SetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_SetNodeRequest.Size(m)
}
func (m *SetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetNodeRequest proto.InternalMessageInfo

func (m *SetNodeRequest) GetGraph() string {
	if m != nil {
		return m.Graph
	}
	return ""
}

func (m *SetNodeRequest) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *SetNodeRequest) GetConfig() *NodeConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetPositionRequest struct {
	Graph                string   `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Node                 string   `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	X                    float64  `protobuf:"fixed64,3,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,4,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPositionRequest) Reset()         { *m = SetPositionRequest{} }
func (m *SetPositionRequest) String() string { return proto.CompactTextString(m) }
func (*SetPositionRequest) ProtoMessage()    {}
func (*SetPositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_shenzhen_go_017a25db36f90c92, []int{11}
}
func (m *SetPositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPositionRequest.Unmarshal(m, b)
}
func (m *SetPositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPositionRequest.Marshal(b, m, deterministic)
}
func (dst *SetPositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPositionRequest.Merge(dst, src)
}
func (m *SetPositionRequest) XXX_Size() int {
	return xxx_messageInfo_SetPositionRequest.Size(m)
}
func (m *SetPositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPositionRequest proto.InternalMessageInfo

func (m *SetPositionRequest) GetGraph() string {
	if m != nil {
		return m.Graph
	}
	return ""
}

func (m *SetPositionRequest) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *SetPositionRequest) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *SetPositionRequest) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "proto.Empty")
	proto.RegisterType((*NodePin)(nil), "proto.NodePin")
	proto.RegisterType((*ChannelConfig)(nil), "proto.ChannelConfig")
	proto.RegisterType((*NodeConfig)(nil), "proto.NodeConfig")
	proto.RegisterType((*ActionRequest)(nil), "proto.ActionRequest")
	proto.RegisterType((*ActionResponse)(nil), "proto.ActionResponse")
	proto.RegisterType((*Input)(nil), "proto.Input")
	proto.RegisterType((*Output)(nil), "proto.Output")
	proto.RegisterType((*SetChannelRequest)(nil), "proto.SetChannelRequest")
	proto.RegisterType((*SetGraphPropertiesRequest)(nil), "proto.SetGraphPropertiesRequest")
	proto.RegisterType((*SetNodeRequest)(nil), "proto.SetNodeRequest")
	proto.RegisterType((*SetPositionRequest)(nil), "proto.SetPositionRequest")
	proto.RegisterEnum("proto.ActionRequest_Action", ActionRequest_Action_name, ActionRequest_Action_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShenzhenGoClient is the client API for ShenzhenGo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShenzhenGoClient interface {
	// Action performs an action (save, generate, install/build, etc).
	Action(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (ShenzhenGo_ActionClient, error)
	// Run runs the program.
	Run(ctx context.Context, opts ...grpc.CallOption) (ShenzhenGo_RunClient, error)
	// SetNode either creates a new channel (name == "", config != nil)
	// changes existing channel data such as name and attached pins (name is found, config != nil),
	// or deletes a channel (name is found, config == nil).
	SetChannel(ctx context.Context, in *SetChannelRequest, opts ...grpc.CallOption) (*Empty, error)
	// SetGraphProperties changes metdata such as name and package path.
	SetGraphProperties(ctx context.Context, in *SetGraphPropertiesRequest, opts ...grpc.CallOption) (*Empty, error)
	// SetNode either creates a new node (name == "", config != nil)
	// changes existing node such as name and multiplicity (name is found, config != nil),
	// or deletes a node (name is found, config == nil).
	SetNode(ctx context.Context, in *SetNodeRequest, opts ...grpc.CallOption) (*Empty, error)
	// SetPosition changes the node position in the diagram.
	SetPosition(ctx context.Context, in *SetPositionRequest, opts ...grpc.CallOption) (*Empty, error)
}

type shenzhenGoClient struct {
	cc *grpc.ClientConn
}

func NewShenzhenGoClient(cc *grpc.ClientConn) ShenzhenGoClient {
	return &shenzhenGoClient{cc}
}

func (c *shenzhenGoClient) Action(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (ShenzhenGo_ActionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ShenzhenGo_serviceDesc.Streams[0], "/proto.ShenzhenGo/Action", opts...)
	if err != nil {
		return nil, err
	}
	x := &shenzhenGoActionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ShenzhenGo_ActionClient interface {
	Recv() (*ActionResponse, error)
	grpc.ClientStream
}

type shenzhenGoActionClient struct {
	grpc.ClientStream
}

func (x *shenzhenGoActionClient) Recv() (*ActionResponse, error) {
	m := new(ActionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *shenzhenGoClient) Run(ctx context.Context, opts ...grpc.CallOption) (ShenzhenGo_RunClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ShenzhenGo_serviceDesc.Streams[1], "/proto.ShenzhenGo/Run", opts...)
	if err != nil {
		return nil, err
	}
	x := &shenzhenGoRunClient{stream}
	return x, nil
}

type ShenzhenGo_RunClient interface {
	Send(*Input) error
	Recv() (*Output, error)
	grpc.ClientStream
}

type shenzhenGoRunClient struct {
	grpc.ClientStream
}

func (x *shenzhenGoRunClient) Send(m *Input) error {
	return x.ClientStream.SendMsg(m)
}

func (x *shenzhenGoRunClient) Recv() (*Output, error) {
	m := new(Output)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *shenzhenGoClient) SetChannel(ctx context.Context, in *SetChannelRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.ShenzhenGo/SetChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shenzhenGoClient) SetGraphProperties(ctx context.Context, in *SetGraphPropertiesRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.ShenzhenGo/SetGraphProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shenzhenGoClient) SetNode(ctx context.Context, in *SetNodeRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.ShenzhenGo/SetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shenzhenGoClient) SetPosition(ctx context.Context, in *SetPositionRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.ShenzhenGo/SetPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShenzhenGoServer is the server API for ShenzhenGo service.
type ShenzhenGoServer interface {
	// Action performs an action (save, generate, install/build, etc).
	Action(*ActionRequest, ShenzhenGo_ActionServer) error
	// Run runs the program.
	Run(ShenzhenGo_RunServer) error
	// SetNode either creates a new channel (name == "", config != nil)
	// changes existing channel data such as name and attached pins (name is found, config != nil),
	// or deletes a channel (name is found, config == nil).
	SetChannel(context.Context, *SetChannelRequest) (*Empty, error)
	// SetGraphProperties changes metdata such as name and package path.
	SetGraphProperties(context.Context, *SetGraphPropertiesRequest) (*Empty, error)
	// SetNode either creates a new node (name == "", config != nil)
	// changes existing node such as name and multiplicity (name is found, config != nil),
	// or deletes a node (name is found, config == nil).
	SetNode(context.Context, *SetNodeRequest) (*Empty, error)
	// SetPosition changes the node position in the diagram.
	SetPosition(context.Context, *SetPositionRequest) (*Empty, error)
}

func RegisterShenzhenGoServer(s *grpc.Server, srv ShenzhenGoServer) {
	s.RegisterService(&_ShenzhenGo_serviceDesc, srv)
}

func _ShenzhenGo_Action_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ActionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ShenzhenGoServer).Action(m, &shenzhenGoActionServer{stream})
}

type ShenzhenGo_ActionServer interface {
	Send(*ActionResponse) error
	grpc.ServerStream
}

type shenzhenGoActionServer struct {
	grpc.ServerStream
}

func (x *shenzhenGoActionServer) Send(m *ActionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ShenzhenGo_Run_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ShenzhenGoServer).Run(&shenzhenGoRunServer{stream})
}

type ShenzhenGo_RunServer interface {
	Send(*Output) error
	Recv() (*Input, error)
	grpc.ServerStream
}

type shenzhenGoRunServer struct {
	grpc.ServerStream
}

func (x *shenzhenGoRunServer) Send(m *Output) error {
	return x.ServerStream.SendMsg(m)
}

func (x *shenzhenGoRunServer) Recv() (*Input, error) {
	m := new(Input)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ShenzhenGo_SetChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShenzhenGoServer).SetChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ShenzhenGo/SetChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShenzhenGoServer).SetChannel(ctx, req.(*SetChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShenzhenGo_SetGraphProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetGraphPropertiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShenzhenGoServer).SetGraphProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ShenzhenGo/SetGraphProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShenzhenGoServer).SetGraphProperties(ctx, req.(*SetGraphPropertiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShenzhenGo_SetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShenzhenGoServer).SetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ShenzhenGo/SetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShenzhenGoServer).SetNode(ctx, req.(*SetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShenzhenGo_SetPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShenzhenGoServer).SetPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ShenzhenGo/SetPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShenzhenGoServer).SetPosition(ctx, req.(*SetPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShenzhenGo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ShenzhenGo",
	HandlerType: (*ShenzhenGoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetChannel",
			Handler:    _ShenzhenGo_SetChannel_Handler,
		},
		{
			MethodName: "SetGraphProperties",
			Handler:    _ShenzhenGo_SetGraphProperties_Handler,
		},
		{
			MethodName: "SetNode",
			Handler:    _ShenzhenGo_SetNode_Handler,
		},
		{
			MethodName: "SetPosition",
			Handler:    _ShenzhenGo_SetPosition_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Action",
			Handler:       _ShenzhenGo_Action_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Run",
			Handler:       _ShenzhenGo_Run_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "shenzhen-go.proto",
}

func init() { proto.RegisterFile("shenzhen-go.proto", fileDescriptor_shenzhen_go_017a25db36f90c92) }

var fileDescriptor_shenzhen_go_017a25db36f90c92 = []byte{
	// 700 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0xdb, 0x4e, 0x1b, 0x3d,
	0x10, 0xc7, 0xe3, 0x1c, 0x36, 0xc9, 0x24, 0x44, 0x61, 0x04, 0x9f, 0x16, 0xd0, 0x27, 0xa5, 0xbe,
	0xda, 0x4a, 0x40, 0x51, 0x90, 0xaa, 0xf6, 0x32, 0x0d, 0x29, 0x42, 0x42, 0x34, 0xda, 0xa4, 0x48,
	0xed, 0x0d, 0x5a, 0x12, 0x93, 0xac, 0x9a, 0xd8, 0x66, 0xd7, 0x51, 0x49, 0x5f, 0xa0, 0xaf, 0xd1,
	0x17, 0xab, 0xd4, 0x47, 0xa9, 0xec, 0xf5, 0xe6, 0x04, 0x85, 0xab, 0xf5, 0x7f, 0x3c, 0xff, 0x19,
	0x1f, 0x7e, 0x5e, 0xd8, 0x8e, 0xc7, 0x8c, 0xff, 0x18, 0x33, 0x7e, 0x34, 0x12, 0xc7, 0x32, 0x12,
	0x4a, 0x60, 0xc1, 0x7c, 0x68, 0x11, 0x0a, 0x9d, 0xa9, 0x54, 0x73, 0xfa, 0x06, 0x8a, 0x57, 0x62,
	0xc8, 0xba, 0x21, 0x47, 0x84, 0x3c, 0x17, 0x43, 0xe6, 0x92, 0x06, 0xf1, 0xca, 0xbe, 0x19, 0x63,
	0x1d, 0x72, 0x32, 0xe4, 0x6e, 0xd6, 0x84, 0xf4, 0x90, 0x7e, 0x81, 0xad, 0xf6, 0x38, 0xe0, 0x9c,
	0x4d, 0xda, 0x82, 0xdf, 0x85, 0x23, 0x63, 0x0b, 0xa6, 0x4b, 0x5b, 0x30, 0x35, 0xb6, 0x41, 0x20,
	0x8d, 0x2d, 0xef, 0xeb, 0x21, 0x52, 0xc8, 0xcb, 0x90, 0xc7, 0x6e, 0xae, 0x91, 0xf3, 0x2a, 0xcd,
	0x5a, 0xb2, 0x9a, 0x63, 0xdb, 0xda, 0x37, 0x73, 0xf4, 0x0f, 0x01, 0xd0, 0x91, 0x67, 0x0a, 0xbb,
	0x50, 0x1c, 0x88, 0xe9, 0x94, 0x71, 0x65, 0xd7, 0x94, 0x4a, 0x3d, 0xc3, 0x78, 0x70, 0x3b, 0x61,
	0x43, 0x37, 0xd7, 0x20, 0x5e, 0xc9, 0x4f, 0x25, 0x52, 0xa8, 0x4e, 0x67, 0x13, 0x15, 0xca, 0x49,
	0x38, 0x08, 0xd5, 0xdc, 0xcd, 0x1b, 0xe3, 0x5a, 0x4c, 0xf7, 0xfa, 0x1e, 0x84, 0xca, 0x2d, 0x18,
	0xab, 0x19, 0xe3, 0x1e, 0x94, 0x64, 0x10, 0xa9, 0x9b, 0xc1, 0xdd, 0xc8, 0x75, 0x1a, 0xc4, 0xab,
	0xfa, 0x45, 0xad, 0xdb, 0x77, 0x23, 0x3c, 0x80, 0xb2, 0x99, 0x52, 0x73, 0xc9, 0xdc, 0xa2, 0xa9,
	0x67, 0x72, 0xfb, 0x73, 0xc9, 0xb0, 0x0a, 0xe4, 0xc1, 0x2d, 0x35, 0x88, 0x47, 0x7c, 0xf2, 0xa0,
	0xd5, 0xdc, 0x2d, 0x27, 0x6a, 0x4e, 0x7f, 0x11, 0xd8, 0x6a, 0x0d, 0x54, 0x28, 0xb8, 0xcf, 0xee,
	0x67, 0x2c, 0x56, 0xb8, 0x03, 0x85, 0x51, 0x14, 0xc8, 0xb1, 0xdd, 0x66, 0x22, 0xf0, 0x14, 0x9c,
	0xc0, 0xa4, 0x99, 0x6d, 0xd6, 0x9a, 0x07, 0xf6, 0xc0, 0xd6, 0xbc, 0xa9, 0xb2, 0xa9, 0xf4, 0x0c,
	0x9c, 0x24, 0x82, 0x25, 0xc8, 0xf7, 0x5a, 0xd7, 0x9d, 0x7a, 0x06, 0x01, 0x1c, 0xbf, 0x73, 0xdd,
	0xf1, 0xfb, 0x75, 0x82, 0x55, 0x28, 0x9d, 0x77, 0xae, 0x3a, 0x7e, 0xab, 0xdf, 0xa9, 0x67, 0xb1,
	0x0c, 0x85, 0x0f, 0x9f, 0x2f, 0x2e, 0xcf, 0xea, 0x39, 0xac, 0x40, 0xf1, 0xe2, 0xaa, 0xd7, 0x6f,
	0x5d, 0x5e, 0xd6, 0xf3, 0xd4, 0x83, 0x5a, 0xda, 0x25, 0x96, 0x82, 0xc7, 0x0c, 0xff, 0x03, 0x47,
	0xcc, 0x94, 0x9c, 0x29, 0xbb, 0x46, 0xab, 0xe8, 0x11, 0x14, 0x2e, 0xb8, 0x9c, 0xfd, 0x6b, 0x0f,
	0x35, 0xc8, 0x2e, 0xd0, 0xc9, 0x86, 0x9c, 0x1e, 0x82, 0xf3, 0xc9, 0x18, 0x35, 0x1e, 0x62, 0x51,
	0x4d, 0x0f, 0x75, 0x84, 0x45, 0x51, 0xca, 0x19, 0x8b, 0x22, 0x7a, 0x0f, 0xdb, 0x3d, 0xa6, 0x2c,
	0x6a, 0xcf, 0x1f, 0x96, 0x86, 0x22, 0xc9, 0x5b, 0x40, 0x91, 0x48, 0x3c, 0x04, 0x67, 0x60, 0x60,
	0x32, 0x4c, 0x54, 0x9a, 0x3b, 0xf6, 0x18, 0xd7, 0x08, 0xf6, 0x6d, 0x0e, 0xfd, 0x49, 0x60, 0xaf,
	0xc7, 0xd4, 0xb9, 0x2e, 0xda, 0x8d, 0x84, 0x64, 0x91, 0x0a, 0x59, 0xfc, 0x7c, 0xef, 0x14, 0xd2,
	0xec, 0x0a, 0xa4, 0xaf, 0xa0, 0x2a, 0x83, 0xc1, 0xb7, 0x60, 0xc4, 0x6e, 0x64, 0xa0, 0xc6, 0xa6,
	0x77, 0xd9, 0xaf, 0xd8, 0x58, 0x37, 0x50, 0x63, 0xfc, 0x1f, 0x20, 0x8c, 0x6f, 0x34, 0xbb, 0x01,
	0x1f, 0x1a, 0x22, 0x4b, 0x7e, 0x39, 0x8c, 0xdb, 0x49, 0x80, 0x32, 0xa8, 0xf5, 0x98, 0xd2, 0x6f,
	0xe1, 0xe5, 0xee, 0xfa, 0xc9, 0x66, 0x57, 0x9e, 0xec, 0xeb, 0x8d, 0x3d, 0x6f, 0xaf, 0xbc, 0xb5,
	0x8d, 0x0d, 0x7f, 0x05, 0xec, 0x31, 0xd5, 0x15, 0x71, 0xf8, 0x32, 0x91, 0x4f, 0xb5, 0x32, 0xa4,
	0xe7, 0xd6, 0x48, 0xcf, 0x5b, 0xd2, 0x9b, 0xbf, 0xb3, 0x00, 0x3d, 0xfb, 0xfb, 0x39, 0x17, 0xf8,
	0x7e, 0xc1, 0xe6, 0xce, 0x53, 0x28, 0xef, 0xef, 0x6e, 0x44, 0x13, 0xf4, 0x68, 0xe6, 0x84, 0xa0,
	0x07, 0x39, 0x7f, 0xc6, 0xb1, 0x6a, 0x33, 0x0c, 0x72, 0xfb, 0x5b, 0x56, 0x25, 0x44, 0xd1, 0x8c,
	0x47, 0x4e, 0x08, 0xbe, 0x05, 0x58, 0x32, 0x83, 0xae, 0x4d, 0x79, 0x84, 0xd1, 0x7e, 0x5a, 0x2a,
	0xf9, 0x05, 0x66, 0xf0, 0xa3, 0x39, 0x87, 0x8d, 0x7b, 0xc7, 0xc6, 0xd2, 0xff, 0x34, 0x12, 0x8f,
	0xea, 0x9c, 0x40, 0xd1, 0x5e, 0x1b, 0xee, 0x2e, 0xcd, 0x2b, 0xd7, 0xf8, 0xc8, 0xf1, 0x0e, 0x2a,
	0x2b, 0x37, 0x80, 0x7b, 0x4b, 0xd7, 0xc6, 0xad, 0x6c, 0x3a, 0x6f, 0x1d, 0x23, 0x4f, 0xff, 0x06,
	0x00, 0x00, 0xff, 0xff, 0xdd, 0x1b, 0x48, 0xe6, 0xe4, 0x05, 0x00, 0x00,
}
